name: Deploy to GitHub Pages
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true
# Adapted from: https://github.com/TenaciousDev/BlazorGitHubPagesDemo

jobs:
  build:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
      # uses GitHub's checkout action to checkout code from the main branch
      - uses: actions/checkout@v4

      # sets up .NET SDK 9.0.x
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      # installs the Blake CLI
      - name: Install Blake CLI
        run: dotnet tool install -g Blake.CLI

      # bake static content
      - name: Run blake bake
        run: blake bake -cl -dr --rss:ignore-path="/pages" --social:base-url="https://goforgoldman.com"

      # publishes the Blake static site to the release folder
      - name: Publish .NET Project
        run: dotnet publish -c Release -o release --nologo

      # copy index.html to 404.html to serve the same file when a file is not found
      - name: copy index.html to 404.html
        run: cp release/wwwroot/index.html release/wwwroot/404.html

      # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll

      # publishes wwwroot directory to GitHub Pages
      # - name: Commit wwwroot to GitHub Pages
      #   uses: JamesIves/github-pages-deploy-action@v4
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: gh-pages # The branch the action should deploy to.
      #     folder: release/wwwroot # The folder the action should deploy.
      - name: Upload release/wwwroot to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: release/wwwroot

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
